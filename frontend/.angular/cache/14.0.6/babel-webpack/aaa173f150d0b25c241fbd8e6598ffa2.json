{"ast":null,"code":"// Checks whether the entire input sequence can be matched\n// against the regular expression.\nexport function matches_entirely() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var regular_expression = arguments[1];\n\n  if (typeof regular_expression === 'string') {\n    regular_expression = '^(?:' + regular_expression + ')$';\n  }\n\n  var matched_groups = text.match(regular_expression);\n  return matched_groups !== null && matched_groups[0].length === text.length;\n}","map":{"version":3,"names":["matches_entirely","text","arguments","length","undefined","regular_expression","matched_groups","match"],"sources":["/usr/src/app/node_modules/libphonenumber-js/es6/common.js"],"sourcesContent":["// Checks whether the entire input sequence can be matched\n// against the regular expression.\nexport function matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups !== null && matched_groups[0].length === text.length;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,gBAAT,GAA4B;EAClC,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;EACA,IAAIG,kBAAkB,GAAGH,SAAS,CAAC,CAAD,CAAlC;;EAEA,IAAI,OAAOG,kBAAP,KAA8B,QAAlC,EAA4C;IAC3CA,kBAAkB,GAAG,SAASA,kBAAT,GAA8B,IAAnD;EACA;;EAED,IAAIC,cAAc,GAAGL,IAAI,CAACM,KAAL,CAAWF,kBAAX,CAArB;EACA,OAAOC,cAAc,KAAK,IAAnB,IAA2BA,cAAc,CAAC,CAAD,CAAd,CAAkBH,MAAlB,KAA6BF,IAAI,CAACE,MAApE;AACA"},"metadata":{},"sourceType":"module"}