{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar forms_1 = require(\"@angular/forms\");\n\nvar lang_1 = require(\"../util/lang\");\n\nexports.creditCard = function (control) {\n  if (lang_1.isPresent(forms_1.Validators.required(control))) return null;\n  var v = control.value;\n  var sanitized = v.replace(/[^0-9]+/g, ''); // problem with chrome\n\n  if (!/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(sanitized)) {\n    return {\n      creditCard: true\n    };\n  }\n\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n\n    if (shouldDouble) {\n      tmpNum *= 2;\n\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n\n    shouldDouble = !shouldDouble;\n  }\n\n  if (Boolean(sum % 10 === 0 ? sanitized : false)) {\n    return null;\n  }\n\n  return {\n    creditCard: true\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","forms_1","require","lang_1","creditCard","control","isPresent","Validators","required","v","sanitized","replace","test","sum","digit","tmpNum","shouldDouble","i","length","substring","parseInt","Boolean"],"sources":["/usr/src/app/node_modules/ng2-validation/__ivy_ngcc__/dist/credit-card/validator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar forms_1 = require(\"@angular/forms\");\nvar lang_1 = require(\"../util/lang\");\nexports.creditCard = function (control) {\n    if (lang_1.isPresent(forms_1.Validators.required(control)))\n        return null;\n    var v = control.value;\n    var sanitized = v.replace(/[^0-9]+/g, '');\n    // problem with chrome\n    if (!(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(sanitized))) {\n        return { creditCard: true };\n    }\n    var sum = 0;\n    var digit;\n    var tmpNum;\n    var shouldDouble;\n    for (var i = sanitized.length - 1; i >= 0; i--) {\n        digit = sanitized.substring(i, (i + 1));\n        tmpNum = parseInt(digit, 10);\n        if (shouldDouble) {\n            tmpNum *= 2;\n            if (tmpNum >= 10) {\n                sum += ((tmpNum % 10) + 1);\n            }\n            else {\n                sum += tmpNum;\n            }\n        }\n        else {\n            sum += tmpNum;\n        }\n        shouldDouble = !shouldDouble;\n    }\n    if (Boolean((sum % 10) === 0 ? sanitized : false)) {\n        return null;\n    }\n    return { creditCard: true };\n};\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;AACAH,OAAO,CAACK,UAAR,GAAqB,UAAUC,OAAV,EAAmB;EACpC,IAAIF,MAAM,CAACG,SAAP,CAAiBL,OAAO,CAACM,UAAR,CAAmBC,QAAnB,CAA4BH,OAA5B,CAAjB,CAAJ,EACI,OAAO,IAAP;EACJ,IAAII,CAAC,GAAGJ,OAAO,CAACL,KAAhB;EACA,IAAIU,SAAS,GAAGD,CAAC,CAACE,OAAF,CAAU,UAAV,EAAsB,EAAtB,CAAhB,CAJoC,CAKpC;;EACA,IAAI,CAAE,wJAAwJC,IAAxJ,CAA6JF,SAA7J,CAAN,EAAgL;IAC5K,OAAO;MAAEN,UAAU,EAAE;IAAd,CAAP;EACH;;EACD,IAAIS,GAAG,GAAG,CAAV;EACA,IAAIC,KAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,YAAJ;;EACA,KAAK,IAAIC,CAAC,GAAGP,SAAS,CAACQ,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;IAC5CH,KAAK,GAAGJ,SAAS,CAACS,SAAV,CAAoBF,CAApB,EAAwBA,CAAC,GAAG,CAA5B,CAAR;IACAF,MAAM,GAAGK,QAAQ,CAACN,KAAD,EAAQ,EAAR,CAAjB;;IACA,IAAIE,YAAJ,EAAkB;MACdD,MAAM,IAAI,CAAV;;MACA,IAAIA,MAAM,IAAI,EAAd,EAAkB;QACdF,GAAG,IAAME,MAAM,GAAG,EAAV,GAAgB,CAAxB;MACH,CAFD,MAGK;QACDF,GAAG,IAAIE,MAAP;MACH;IACJ,CARD,MASK;MACDF,GAAG,IAAIE,MAAP;IACH;;IACDC,YAAY,GAAG,CAACA,YAAhB;EACH;;EACD,IAAIK,OAAO,CAAER,GAAG,GAAG,EAAP,KAAe,CAAf,GAAmBH,SAAnB,GAA+B,KAAhC,CAAX,EAAmD;IAC/C,OAAO,IAAP;EACH;;EACD,OAAO;IAAEN,UAAU,EAAE;EAAd,CAAP;AACH,CAlCD"},"metadata":{},"sourceType":"script"}